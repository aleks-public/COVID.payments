#Область ПрограммныйИнтерфейс

Функция СформироватьВыгрузкуФайла(ПараметрыВыполненияОперации) Экспорт
	ОсновноеПространствоИмен = "http://www.fss.ru/integration/types/pvso/quarantine/covidworkerregistr/v01";
	
	Исполнитель = ПараметрыВыполненияОперации.Ответственный.Исполнитель;
	
	Пакет = ФабрикаXDTO.Пакеты.Получить(ОсновноеПространствоИмен);
	ТипБазовогоОбъекта = Пакет.КорневыеСвойства.Получить("submitCovidWorkerRegistrRequest").Тип;
	БазовыйОбъект = ФабрикаXDTO.Создать(ТипБазовогоОбъекта);
	
	ОтборКонфигурации = Новый Структура("Имя", "ВыгрузкаВыплатЗаЛечениеПациентовСCOVID");
	РасширениеКонфигурации = РасширенияКонфигурации.Получить(ОтборКонфигурации)[0];
	
	СтруктураДанныеРаботодателя = ПолучитьДанныеРаботодателя(ПараметрыВыполненияОперации.Организация);
	ЗаполнитьЗначенияСвойств(БазовыйОбъект, ПолучитьКонтактныеДанныеФизическогоЛица(Исполнитель));
	ЗаполнитьЗначенияСвойств(БазовыйОбъект, СтруктураДанныеРаботодателя);
	БазовыйОбъект.software = "1С: Зарплата и кадры ред 3.х. Расширение конфигурации '" + РасширениеКонфигурации.Синоним + "'";
	БазовыйОбъект.versionSoftware = РасширениеКонфигурации.Версия;
	БазовыйОбъект.author = ПолучитьФИОПолныеФизическогоЛица(Исполнитель);
	БазовыйОбъект.dt1 = ПараметрыВыполненияОперации.ПериодРегистрации;
	
	ТипВыгружаемойЗаписи = ФабрикаXDTO.Тип(ОсновноеПространствоИмен, "CovidWorkerDoc");
	
	ТипДокумента = ФабрикаXDTO.Тип(ОсновноеПространствоИмен, "CommonDocInfoType");
	ТипДанныеСотрудника = ФабрикаXDTO.Тип(ОсновноеПространствоИмен, "InsuredDataType");
	ТипДанныеРаботодателя = ФабрикаXDTO.Тип(ОсновноеПространствоИмен, "EmployerDataType");
	ТипДанныеНачислений = ФабрикаXDTO.Тип(ОсновноеПространствоИмен, "CalculationDataType");
	
	ДанныеСотрудников = ПолучитьДанныеСотрудников(ПараметрыВыполненияОперации.МассивВыгружаемыхДанных);
	
	Для каждого ЭлементВыгружаемыхДанных из ПараметрыВыполненияОперации.МассивВыгружаемыхДанных Цикл
		ЗаписьСотрудника = ДанныеСотрудников.Найти(ЭлементВыгружаемыхДанных.Сотрудник, "Сотрудник");
		Если ЗаписьСотрудника = Неопределено Тогда
			ВызватьИсключение "Не удалось определить данные для сотрудника " + ЭлементВыгружаемыхДанных.Сотрудник;
		Иначе
			НовЗапись = ФабрикаXDTO.Создать(ТипВыгружаемойЗаписи);
			
			ДанныеДокумента = ФабрикаXDTO.Создать(ТипДокумента);
			ДанныеДокумента.typeInfo = 0;
			ДанныеДокумента.docType = 99;
			
			ДанныеСотрудника = ФабрикаXDTO.Создать(ТипДанныеСотрудника);
			ДанныеСотрудника.snils = СтрЗаменить(СтрЗаменить(ЗаписьСотрудника.СНИЛС, "-", ""), " ", "");
			ДанныеСотрудника.firstName = ЗаписьСотрудника.Имя;
			ДанныеСотрудника.lastName = ЗаписьСотрудника.Фамилия;
			ДанныеСотрудника.paymentType = ?(ЗаписьСотрудника.COVID_ЗарплатнаяКартаМИР, 2, 1);
			ДанныеСотрудника.accountBic = ЗаписьСотрудника.БанкКод;
			ДанныеСотрудника.accountName = ЗаписьСотрудника.БанкНаименование;
			ДанныеСотрудника.account = ЗаписьСотрудника.НомерЛицевогоСчета;
			ДанныеСотрудника.birthday = ЗаписьСотрудника.ДатаРождения;
			
			НовЗапись.commonDocInfo = ДанныеДокумента;
			
			ДанныеРаботодателя = ФабрикаXDTO.Создать(ТипДанныеРаботодателя);
			ЗаполнитьЗначенияСвойств(ДанныеРаботодателя, СтруктураДанныеРаботодателя);
			
			НовЗапись.employerData = ДанныеРаботодателя;
			
			ДанныеНачислений = ФабрикаXDTO.Создать(ТипДанныеНачислений);
			ДанныеНачислений.calcDays = ЭлементВыгружаемыхДанных.КоличествоСтавок;
			ДанныеНачислений.kfReg = 1.15;
			Если ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание") Тогда
				Позиция = ЭлементВыгружаемыхДанных.ДолжностьПоШтатномуРасписанию;
				ДанныеНачислений.position = Позиция.Должность.Наименование;
			Иначе
				Позиция = ЭлементВыгружаемыхДанных.Должность;
				ДанныеНачислений.position = Позиция.Наименование;
			КонецЕсли;
			COVID_КатегорияМедицинскихРаботников = Позиция.COVID_КатегорияМедицинскихРаботников;
			ДанныеНачислений.category = COVID_КатегорияМедицинскихРаботников.Код;
			ДанныеНачислений.fssPayment = COVID_КатегорияМедицинскихРаботников.COVID_СуммаВыплаты;
			
			НовЗапись.calculationData = ДанныеНачислений;
			
			БазовыйОбъект.row.Добавить(НовЗапись);
		КонецЕсли;
	КонецЦикла;
	
	Поток = Новый ПотокВПамяти;
	Запись = Новый ЗаписьXML;
	Запись.ОткрытьПоток(Поток);
	Запись.ЗаписатьОбъявлениеXML();
	
	ФабрикаXDTO.ЗаписатьXML(Запись, БазовыйОбъект, "submitCovidWorkerRegistrRequest", ОсновноеПространствоИмен);
	
	Запись.Закрыть();
	Возврат Поток.ЗакрытьИПолучитьДвоичныеДанные();
	
	//<row>
	//        <commonDocInfo>
	//           <typeInfo>0</typeInfo>
	//           <docType>99</docType>
	//        </commonDocInfo>
	//        <insuredData>
	//           <snils>00000000001</snils>
	//           <firstName>Имя</firstName>
	//           <lastName>Фамилия</lastName>
	//           <paymentType>1</paymentType>
	//           <accountBic>999999999</accountBic>
	//           <accountName>Банк имя</accountName>
	//           <account>89895000800000999996</account>
	//           <birthday>1980-10-01</birthday>
	//        </insuredData>
	//        <employerData>
	//           <employer>Г. КРАСНОЯРСК, УЛ. АК. ПАВЛОВА,   Д. 4, СТР. 7</employer>
	//           <emplRegnum>7700000003</emplRegnum>
	//           <emplInn>7507000106</emplInn>
	//        </employerData>
	//        <calculationData>
	//           <calcDays>2.0</calcDays>
	//           <kfReg>1.85</kfReg>
	//           <position>Средний мед. персонал</position>
	//           <category>43</category>
	//           <fssPayment>2160.00</fssPayment>
	//        </calculationData>
	//     </row>

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДанныеСотрудников(МассивВыгружаемыхДанных)
	МассивСотрудников = Новый Массив;
	
	Для каждого Элемент из МассивВыгружаемыхДанных Цикл
		Если МассивСотрудников.Найти(Элемент.Сотрудник) = Неопределено Тогда
			МассивСотрудников.Добавить(Элемент.Сотрудник);
		КонецЕсли;
	КонецЦикла;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	КадровыеДанные = "Сотрудник, Фамилия, Имя, Отчество, ЗарплатныйПроект, НомерЛицевогоСчета, ДатаРождения, ФизическоеЛицо";
	КадровыйУчет.СоздатьНаДатуВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, Истина, МассивСотрудников, КадровыеДанные, ТекущаяДата());
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
				   |	ВТКадровыеДанныеСотрудников.Сотрудник КАК Сотрудник,
	               |	ВТКадровыеДанныеСотрудников.Фамилия КАК Фамилия,
	               |	ВТКадровыеДанныеСотрудников.Имя КАК Имя,
	               |	ВТКадровыеДанныеСотрудников.Отчество КАК Отчество,
	               |	ВТКадровыеДанныеСотрудников.ЗарплатныйПроект КАК ЗарплатныйПроект,
	               |	ВТКадровыеДанныеСотрудников.НомерЛицевогоСчета КАК НомерЛицевогоСчета,
	               |	ВТКадровыеДанныеСотрудников.ДатаРождения КАК ДатаРождения,
	               |	ВТКадровыеДанныеСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	ФизическиеЛица.СтраховойНомерПФР КАК СНИЛС,
	               |	ЗарплатныеПроекты.COVID_ЗарплатнаяКартаМИР КАК COVID_ЗарплатнаяКартаМИР,
	               |	ЗарплатныеПроекты.Банк.Код КАК БанкКод,
	               |	ЗарплатныеПроекты.Банк.Наименование КАК БанкНаименование
	               |ИЗ
	               |	ВТКадровыеДанныеСотрудников КАК ВТКадровыеДанныеСотрудников
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	               |		ПО ВТКадровыеДанныеСотрудников.ФизическоеЛицо = ФизическиеЛица.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗарплатныеПроекты КАК ЗарплатныеПроекты
	               |		ПО ВТКадровыеДанныеСотрудников.ЗарплатныйПроект = ЗарплатныеПроекты.Ссылка";
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция ПолучитьФИОПолныеФизическогоЛица(Исполнитель)
	ИсполнительВМассиве = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Исполнитель);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	КадровыйУчет.СоздатьНаДатуВТКадровыеДанныеФизическихЛиц(МенеджерВременныхТаблиц, Истина, ИсполнительВМассиве, "ФИОПолные", ТекущаяДата());
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	               |	естьnull(ВТКадровыеДанныеФизическихЛиц.ФИОПолные, """") КАК ФИОПолные
	               |ИЗ
	               |	ВТКадровыеДанныеФизическихЛиц КАК ВТКадровыеДанныеФизическихЛиц";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ФИОПолные;
	Иначе
		Возврат "";
	КонецЕсли;
КонецФункции

Функция ПолучитьКонтактныеДанныеФизическогоЛица(Исполнитель)
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Исполнитель", Исполнитель);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ФизическиеЛица.Ссылка КАК ФизическоеЛицо
	               |ПОМЕСТИТЬ ВТИсполнитель
	               |ИЗ
	               |	Справочник.ФизическиеЛица КАК ФизическиеЛица
	               |ГДЕ
	               |	ФизическиеЛица.Ссылка = &Исполнитель";
	Запрос.Выполнить();
	
	//Описатель = КадровыйУчет.ОписательВременныхТаблицДляСоздать(МенеджерВременныхТаблиц, "ВТИсполнитель", "ФизическоеЛицо,Период");
	
	Описатель = КадровыйУчет.ОписаниеВременнойТаблицыОтборовФизическихЛиц("ВТИсполнитель");
	КадровыеДанные = "ТелефонРабочийПредставление, ТелефонМобильныйПредставление, EMailПредставление";
	Запрос = КадровыйУчет.ЗапросВТПостоянныеКадровыеДанныеФизическихЛиц(Истина, Описатель, КадровыеДанные);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ
                    |	естьnull(ВТПостоянныеКадровыеДанныеФизическихЛиц.EMailПредставление, """") как EMailПредставление,
					|	естьnull(ВТПостоянныеКадровыеДанныеФизическихЛиц.ТелефонРабочийПредставление, """") как ТелефонРабочийПредставление,
					|	естьnull(ВТПостоянныеКадровыеДанныеФизическихЛиц.ТелефонМобильныйПредставление, """") как ТелефонМобильныйПредставление
                    |ИЗ
                    |	ВТПостоянныеКадровыеДанныеФизическихЛиц КАК ВТПостоянныеКадровыеДанныеФизическихЛиц";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат = Новый Структура;
		Результат.Вставить("email", Выборка.EMailПредставление);
		Если ЗначениеЗаполнено(Выборка.ТелефонРабочийПредставление) Тогда
			Результат.Вставить("phone", Выборка.ТелефонРабочийПредставление);
		Иначе
			Результат.Вставить("phone", Выборка.ТелефонМобильныйПредставление);
		КонецЕсли;
	Иначе
		Результат = Новый Структура("phone, email", "", "");
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

Функция ПолучитьДанныеРаботодателя(Организация)
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "ИНН, COVID_КПП, ОГРН, COVID_РегистрационныйНомер, НаименованиеПолное");
	Результат = Новый Структура;
	Результат.Вставить("emplKpp", ЗначенияРеквизитов.COVID_КПП);
	Результат.Вставить("emplInn", ЗначенияРеквизитов.ИНН);
	Результат.Вставить("emplOgrn", ЗначенияРеквизитов.ОГРН);
	Результат.Вставить("emplRegnum", ЗначенияРеквизитов.COVID_РегистрационныйНомер);
	Результат.Вставить("employer", ЗначенияРеквизитов.НаименованиеПолное);
	
	Возврат Результат;
КонецФункции
#КонецОбласти