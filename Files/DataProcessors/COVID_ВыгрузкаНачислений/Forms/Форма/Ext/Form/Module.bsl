#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПроверкаПередЗаполнением(Отказ)
	Ошибки = Неопределено;
	Если не ЗначениеЗаполнено(Объект.МесяцНачисления) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "МесяцНачисленияСтрокой", "Не задан месяц начисления");
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(Объект.Организация) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Объект.Организация", "Не задан месяц начисления");
	КонецЕсли;
	
	Если Ошибки <> Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СформироватьТаблицуКадровыхДанных(ДатаНачала, ДатаОкончания)
	ПараметрыОтбора = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыОтбора.Вставить("Организация", Объект.Организация);
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
		ПараметрыОтбора.Вставить("Подразделение", Объект.Подразделение);
	КонецЕсли;
	ПараметрыОтбора.Вставить("НачалоПериода", ДатаНачала);
	ПараметрыОтбора.Вставить("КонецПериода", ДатаОкончания);
	
	Сотрудники = КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыОтбора);
	МассивСотрудников = Сотрудники.ВыгрузитьКолонку("Сотрудник");
	
	КадровыеДанные = "ИНН, Организация, Подразделение, Должность, ДолжностьПоШтатномуРасписанию, ЗарплатныйПроект, ГрафикРаботы, ВидЗанятости, КоличествоСтавок";
	
	СписокКадровыхДвижений = Неопределено;
	
	ТекДата = ДатаНачала;
	Пока ТекДата <= ДатаОкончания Цикл
		Если СписокКадровыхДвижений = Неопределено Тогда
			СписокКадровыхДвижений = КадровыйУчет.КадровыеДанныеСотрудников(Истина, МассивСотрудников, КадровыеДанные, ТекДата,, Истина);
		Иначе
			ТекСписокКадровыхДвижений = КадровыйУчет.КадровыеДанныеСотрудников(Истина, МассивСотрудников, КадровыеДанные, ТекДата,, Истина);
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТекСписокКадровыхДвижений, СписокКадровыхДвижений);
		КонецЕсли;
		ТекДата = ТекДата + 24 * 3600;
	КонецЦикла;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТЗСотрудники.Сотрудник КАК Сотрудник,
	                      |	ТЗСотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	                      |	ТЗСотрудники.ИНН КАК ИНН,
	                      |	ТЗСотрудники.Организация КАК Организация,
	                      |	ТЗСотрудники.Подразделение КАК Подразделение,
	                      |	ТЗСотрудники.Должность КАК Должность,
	                      |	ТЗСотрудники.ДолжностьПоШтатномуРасписанию КАК ДолжностьПоШтатномуРасписанию,
	                      |	ТЗСотрудники.ЗарплатныйПроект КАК ЗарплатныйПроект,
	                      |	ТЗСотрудники.ГрафикРаботы КАК ГрафикРаботы,
	                      |	ТЗСотрудники.ВидЗанятости КАК ВидЗанятости,
	                      |	ТЗСотрудники.КоличествоСтавок КАК КоличествоСтавок,
	                      |	ТЗСотрудники.Период КАК Период,
	                      |	ДАТАВРЕМЯ(1, 1, 1) КАК ПериодДо
	                      |ПОМЕСТИТЬ ВТДанныеВнешнейТаблицы
	                      |ИЗ
	                      |	&ТЗСотрудники КАК ТЗСотрудники
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТДанныеВнешнейТаблицы.Сотрудник КАК Сотрудник,
	                      |	ВТДанныеВнешнейТаблицы.ФизическоеЛицо КАК ФизическоеЛицо,
	                      |	ВТДанныеВнешнейТаблицы.ИНН КАК ИНН,
	                      |	ВТДанныеВнешнейТаблицы.Организация КАК Организация,
	                      |	ВТДанныеВнешнейТаблицы.Подразделение КАК Подразделение,
	                      |	ВТДанныеВнешнейТаблицы.Должность КАК Должность,
	                      |	ВТДанныеВнешнейТаблицы.ДолжностьПоШтатномуРасписанию КАК ДолжностьПоШтатномуРасписанию,
	                      |	ВТДанныеВнешнейТаблицы.ЗарплатныйПроект КАК ЗарплатныйПроект,
	                      |	ВТДанныеВнешнейТаблицы.ГрафикРаботы КАК ГрафикРаботы,
	                      |	ВТДанныеВнешнейТаблицы.ВидЗанятости КАК ВидЗанятости,
	                      |	ВТДанныеВнешнейТаблицы.КоличествоСтавок КАК КоличествоСтавок,
	                      |	МИНИМУМ(ВТДанныеВнешнейТаблицы.Период) КАК Период
	                      |ПОМЕСТИТЬ ВТМинимальныеПериоды
	                      |ИЗ
	                      |	ВТДанныеВнешнейТаблицы КАК ВТДанныеВнешнейТаблицы
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТДанныеВнешнейТаблицы.Организация,
	                      |	ВТДанныеВнешнейТаблицы.ФизическоеЛицо,
	                      |	ВТДанныеВнешнейТаблицы.Должность,
	                      |	ВТДанныеВнешнейТаблицы.ГрафикРаботы,
	                      |	ВТДанныеВнешнейТаблицы.Сотрудник,
	                      |	ВТДанныеВнешнейТаблицы.Подразделение,
	                      |	ВТДанныеВнешнейТаблицы.ЗарплатныйПроект,
	                      |	ВТДанныеВнешнейТаблицы.ДолжностьПоШтатномуРасписанию,
	                      |	ВТДанныеВнешнейТаблицы.КоличествоСтавок,
	                      |	ВТДанныеВнешнейТаблицы.ВидЗанятости,
	                      |	ВТДанныеВнешнейТаблицы.ИНН
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТМинимальныеПериоды.Сотрудник КАК Сотрудник,
	                      |	ВТМинимальныеПериоды.ФизическоеЛицо КАК ФизическоеЛицо,
	                      |	ВТМинимальныеПериоды.ИНН КАК ИНН,
	                      |	ВТМинимальныеПериоды.Организация КАК Организация,
	                      |	ВТМинимальныеПериоды.Подразделение КАК Подразделение,
	                      |	ВТМинимальныеПериоды.Должность КАК Должность,
	                      |	ВТМинимальныеПериоды.ДолжностьПоШтатномуРасписанию КАК ДолжностьПоШтатномуРасписанию,
	                      |	ВТМинимальныеПериоды.ЗарплатныйПроект КАК ЗарплатныйПроект,
	                      |	ВТМинимальныеПериоды.ГрафикРаботы КАК ГрафикРаботы,
	                      |	ВТМинимальныеПериоды.ВидЗанятости КАК ВидЗанятости,
	                      |	ВТМинимальныеПериоды.КоличествоСтавок КАК КоличествоСтавок,
	                      |	ВТМинимальныеПериоды.Период КАК Период,
	                      |	ЕСТЬNULL(ВложенныйЗапрос.ПериодДо, &КонецМесяца) КАК ПериодДо
	                      |ИЗ
	                      |	ВТМинимальныеПериоды КАК ВТМинимальныеПериоды
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                      |			ВТМинимальныеПериоды.Сотрудник КАК Сотрудник,
	                      |			ВТМинимальныеПериоды.Период КАК Период,
	                      |			МИНИМУМ(ВТМаксимальныеПериоды.Период) КАК ПериодДо
	                      |		ИЗ
	                      |			ВТМинимальныеПериоды КАК ВТМинимальныеПериоды
	                      |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТМинимальныеПериоды КАК ВТМаксимальныеПериоды
	                      |				ПО ВТМинимальныеПериоды.Сотрудник = ВТМаксимальныеПериоды.Сотрудник
	                      |					И ВТМинимальныеПериоды.Период < ВТМаксимальныеПериоды.Период
	                      |		
	                      |		СГРУППИРОВАТЬ ПО
	                      |			ВТМинимальныеПериоды.Сотрудник,
	                      |			ВТМинимальныеПериоды.Период) КАК ВложенныйЗапрос
	                      |		ПО ВТМинимальныеПериоды.Сотрудник = ВложенныйЗапрос.Сотрудник
	                      |			И ВТМинимальныеПериоды.Период = ВложенныйЗапрос.Период");
	Запрос.УстановитьПараметр("ТЗСотрудники", СписокКадровыхДвижений);
	Запрос.УстановитьПараметр("КонецМесяца", ДатаОкончания + 1);
	Выгрузка = Запрос.Выполнить().Выгрузить();
	
	Для каждого Строка из Выгрузка Цикл
		Строка.ПериодДо = Строка.ПериодДо - 1;
	КонецЦикла;
	
	Возврат Выгрузка;
КонецФункции

&НаСервере
Процедура ОбновитьСписокСотрудниковНаСервере()
	ТаблицаКадровыхДанных = СформироватьТаблицуКадровыхДанных(НачалоМесяца(Объект.МесяцНачисления), КонецМесяца(Объект.МесяцНачисления));
	
	СотрудникиКВыгрузке.Очистить();
	
	Для каждого Строка из ТаблицаКадровыхДанных Цикл
		НовСтрока = СотрудникиКВыгрузке.Добавить();
		НовСтрока.Сотрудник = Строка.Сотрудник;
		НовСтрока.Комментарий = "";
		НовСтрока.ЕстьОшибки = Ложь;
		НовСтрока.Сумма = 0;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьДанныеНаСервере()
	ВидИспользованияРабочегоВремени = Справочники.ВидыИспользованияРабочегоВремени.НайтиПоНаименованию("Отработано с пациентами, больными COVID-19");
	Если ВидИспользованияРабочегоВремени.Пустая() Тогда
		ВидИспользованияРабочегоВремени = Справочники.ВидыИспользованияРабочегоВремени.СоздатьЭлемент();
		ВидИспользованияРабочегоВремени.БуквенныйКод = "К19";
		ВидИспользованияРабочегоВремени.ЦифровойКод = "19";
		ВидИспользованияРабочегоВремени.БуквенныйКодБюджетный = "К19";
		ВидИспользованияРабочегоВремени.БуквенныйКодБюджетный2009 = "19";
		ВидИспользованияРабочегоВремени.Наименование = "Отработано с пациентами, больными COVID-19";
		ВидИспользованияРабочегоВремени.ПолноеНаименование = "Отработано с пациентами, больными COVID-19";
		ВидИспользованияРабочегоВремени.РабочееВремя = Истина;
		ВидИспользованияРабочегоВремени.ОсновноеВремя = Справочники.ВидыИспользованияРабочегоВремени.Явка;
		ВидИспользованияРабочегоВремени.Записать();
		ВидИспользованияРабочегоВремени = ВидИспользованияРабочегоВремени.Ссылка;
	КонецЕсли;
	
	Макет = Справочники.COVID_КатегорииМедицинскихРаботников.ПолучитьМакет("COVID_КатегорииМедицинскихРаботников");
	Для Сч = 1 По Макет.ВысотаТаблицы Цикл
		Код = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Макет.Область(Сч, 1).Текст);
		КатегорияМедицинскихРаботников = Справочники.COVID_КатегорииМедицинскихРаботников.НайтиПоКоду(Код);
		Если КатегорияМедицинскихРаботников.Пустая() Тогда
			КатегорияМедицинскихРаботников = Справочники.COVID_КатегорииМедицинскихРаботников.СоздатьЭлемент();
			КатегорияМедицинскихРаботников.Код = Код;
			КатегорияМедицинскихРаботников.Наименование = Макет.Область(Сч, 2).Текст;
			КатегорияМедицинскихРаботников.COVID_СуммаВыплаты = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Макет.Область(Сч, 3).Текст);
			КатегорияМедицинскихРаботников.Записать();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область ДействияФормы

&НаКлиенте
Процедура ОбработчикОжиданияМесяцНачисленияПриИзменении()
	
	//Для совместимости
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.МесяцНачисления", "МесяцНачисленияСтрокой", Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("МесяцНачисленияСтрокойНачалоВыбораЗавершение", ЭтотОбъект);
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.МесяцНачисления", "МесяцНачисленияСтрокой", , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойНачалоВыбораЗавершение(ЗначениеВыбрано, ДополнительныеПараметры) Экспорт
	//Для совместимости	
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.МесяцНачисления", "МесяцНачисленияСтрокой", Направление, Модифицированность);
	
	ПодключитьОбработчикОжидания("ОбработчикОжиданияМесяцНачисленияПриИзменении", 0.3, Истина);

КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Объект.МесяцНачисления = НачалоМесяца(ТекущаяДата());
	МесяцНачисленияСтрокой = Формат(Объект.МесяцНачисления, "ДФ='MMMM yyyy""г.""'");
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.МесяцНачисления", "МесяцНачисленияСтрокой", Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокСотрудников(Команда)
	Отказ = Ложь;
	ПроверкаПередЗаполнением(Отказ);
	Если не Отказ Тогда
		ОбновитьСписокСотрудниковНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
КонецПроцедуры

&НаКлиенте
Процедура ИнициализироватьДанные(Команда)
	ИнициализироватьДанныеНаСервере();
КонецПроцедуры

#КонецОбласти
