#Область ПрограммныйИнтерфейс

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  Структура - см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	МетаданныеДокумента = Метаданные.Документы.COVID_ДанныеДляОплатыСмен;
	Возврат ЗарплатаКадрыСоставДокументов.ОписаниеСоставаОбъектаПоМетаданнымФизическиеЛицаВТабличныхЧастях(МетаданныеДокумента);
	
КонецФункции

Функция ВыборкаДанныхОВремени(ДанныеДокумента, СписокСотрудников = Неопределено) Экспорт
	ДатаНачала = НачалоМесяца(ДанныеДокумента.ПериодРегистрации);
	ДатаОкончания = КонецМесяца(ДанныеДокумента.ПериодРегистрации);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", ДанныеДокумента.Организация);
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);

	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	НеучитываемыеДокументы = Новый Массив;
	Если Не ДанныеДокумента.Ссылка.Пустая() Тогда
		НеучитываемыеДокументы.Добавить(ДанныеДокумента.Ссылка);
	КонецЕсли;
	
	ТаблицаСотрудников = Новый ТаблицаЗначений;
	ТаблицаСотрудников.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	ТаблицаСотрудников.Колонки.Добавить("Месяц", Новый ОписаниеТипов("Дата"));
	ТаблицаСотрудников.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	ТаблицаСотрудников.Колонки.Добавить("ДатаОкончания", Новый ОписаниеТипов("Дата"));	
	ТаблицаСотрудников.Колонки.Добавить("ДатаАктуальности", Новый ОписаниеТипов("Дата"));	
	
	Если СписокСотрудников = Неопределено Тогда
		ПараметрыПолученияСотрудников = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
		ПараметрыПолученияСотрудников.Организация  = ДанныеДокумента.Организация;
		ПараметрыПолученияСотрудников.НачалоПериода = ДатаНачала;
		ПараметрыПолученияСотрудников.ОкончаниеПериода = ДатаОкончания;
		
		Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") Тогда
			Модуль = ОбщегоНазначения.ОбщийМодуль("ГосударственнаяСлужба");
			Модуль.ДобавитьОтборыПоВидуДоговора(ПараметрыПолученияСотрудников.Отборы, Истина);
		КонецЕсли; 
	
		КадровыйУчет.СоздатьВТСотрудникиОрганизации(Запрос.МенеджерВременныхТаблиц, Истина, ПараметрыПолученияСотрудников, "ВТСотрудникиОрганизации");
		
		Запрос.УстановитьПараметр("Месяц", НачалоМесяца(ДатаНачала));
		Запрос.УстановитьПараметр("ДатаАктуальности", ДатаОкончания);
	
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СотрудникиОрганизации.Сотрудник,
		|	&Месяц,
		|	&ДатаАктуальности,
		|	&ДатаНачала,
		|	&ДатаОкончания
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ
		|	ВТСотрудникиОрганизации КАК СотрудникиОрганизации";
		
		Выгрузка = Запрос.Выполнить();
		
	Иначе	
		Для Каждого Сотрудник Из СписокСотрудников Цикл
			СтрокаТаблицыСотрудников = ТаблицаСотрудников.Добавить();
			СтрокаТаблицыСотрудников.Сотрудник = Сотрудник;
			СтрокаТаблицыСотрудников.Месяц = ДанныеДокумента.ПериодРегистрации; 
			СтрокаТаблицыСотрудников.ДатаНачала = ДатаНачала;
			СтрокаТаблицыСотрудников.ДатаОкончания = ДатаОкончания;
			СтрокаТаблицыСотрудников.ДатаАктуальности = ДатаОкончания;
		КонецЦикла;	
		
		Запрос.УстановитьПараметр("ТаблицаСотрудников", ТаблицаСотрудников);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаСотрудников.Сотрудник,
		|	ТаблицаСотрудников.Месяц,
		|	ТаблицаСотрудников.ДатаНачала,
		|	ТаблицаСотрудников.ДатаОкончания,
		|	ТаблицаСотрудников.ДатаАктуальности КАК ДатаАктуальности
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ
		|	&ТаблицаСотрудников КАК ТаблицаСотрудников";
		
		Запрос.Выполнить();
	КонецЕсли;	
	
	ПараметрыДляЗапросВТРабочиеМестаСотрудников = КадровыйУчет.ПараметрыДляЗапросВТРабочиеМестаСотрудниковПоВременнойТаблице(
														"ВТСотрудники",
														"Сотрудник", 
														"ДатаНачала",
														"ДатаОкончания");
	
	ЗапросВТРабочиеМестаСотрудников = КадровыйУчет.ЗапросВТРабочиеМестаСотрудниковПоВременнойТаблице(
											Истина, 
											"ВТРабочиеМестаСотрудников",
											ПараметрыДляЗапросВТРабочиеМестаСотрудников,
											Запрос.МенеджерВременныхТаблиц);
											
	ЗапросВТРабочиеМестаСотрудников.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросВТРабочиеМестаСотрудников.Выполнить();
											
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВТРабочиеМестаСотрудников.Сотрудник КАК Сотрудник,
		|	ВЫБОР
		|		КОГДА ВТРабочиеМестаСотрудников.ДатаНачала < &ДатаНачала
		|			ТОГДА &ДатаНачала
		|		ИНАЧЕ ВТРабочиеМестаСотрудников.ДатаНачала
		|	КОНЕЦ КАК ДатаНачала,
		|	ВЫБОР
		|		КОГДА ВТРабочиеМестаСотрудников.ДатаОкончания > &ДатаОкончания
		|			ТОГДА &ДатаОкончания
		|		ИНАЧЕ ВТРабочиеМестаСотрудников.ДатаОкончания
		|	КОНЕЦ КАК ДатаОкончания,
		|	ВТРабочиеМестаСотрудников.Должность КАК Должность,
		|	ВТРабочиеМестаСотрудников.ДолжностьПоШтатномуРасписанию КАК ДолжностьПоШтатномуРасписанию,
		|	ВТРабочиеМестаСотрудников.КоличествоСтавок КАК КоличествоСтавок,
		|	ВТРабочиеМестаСотрудников.Подразделение КАК Подразделение,
		|	ВТРабочиеМестаСотрудников.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	ВТРабочиеМестаСотрудников КАК ВТРабочиеМестаСотрудников
		|ГДЕ
		|	&УсловиеПодразделение";
	
	Если ЗначениеЗаполнено(ДанныеДокумента.Подразделение) И ПолучитьФункциональнуюОпцию("ВыполнятьРасчетЗарплатыПоПодразделениям") Тогда
		Запрос.УстановитьПараметр("Подразделение", ДанныеДокумента.Подразделение);
		ТекстУсловияПодразделение = "ВТРабочиеМестаСотрудников.Подразделение = &Подразделение";
	Иначе
		ТекстУсловияПодразделение = "ИСТИНА";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПодразделение", ТекстУсловияПодразделение);
	
	Возврат Запрос.Выполнить().Выбрать();
		
КонецФункции

#КонецОбласти